Setting Up a Jenkins Maven Project for GitHub Integration and SSH Deployment
-----------------------------------------------------------------------------
1. Go to the Jenkins Dashboard.
2. Click New Item.
3. Enter the item name: WebApp.
4. Select Maven Project.
5. Click OK.
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
Source Code Management
1. Select Git.
2. Under Repositories:
   Repository URL: https://github.com/deekshith000007/WebApp.git
   ->Credentials: None
3. Click Advanced to add repository details.
4. Under Branches to build:
   ->Branch Specifier (blank for 'any'): main
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
Build Triggers
1. Check GitHub hook trigger for GITScm polling.
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
Build
1. Root POM: pom.xml
2. Goals and options: clean install
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
Build Settings
1. E-mail Notification:
   ->Recipients: anygmail.com
   ->Check Send e-mail for every unstable build.
   ->Check Send separate e-mails to individuals who broke the build.
   ->Check Send e-mail for each failed module.
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
Post-build Actions
1. Click Add post-build action.
2. Select Send build artifacts over SSH.
3. Under SSH Publishers:
   ->SSH Server:
         ->Name: dockerhost
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
Advanced Settings for SSH Publishers
1. Transfers:
   ->Transfer Set:
        ->Source files: webapp/target/*.war
        ->Remove prefix: webapp/target
        ->Remote directory: /opt/tomcat
2. Exec command:
```
#!/bin/bash
# Change to the directory containing the Dockerfile
cd /opt/tomcat
# Build the Docker image with the tag 'app:v1'
docker build -t app:v1 .
# Stop the running container named 'webapp' if it exists
docker stop webapp 
# Remove the container named 'webapp' if it exists
docker rm webapp
# Run a new container from the 'app:v1' image
docker run -it -d --name webapp -p 8082:8080 app:v1 /bin/bash
# Wait for the container to be fully up and running
sleep 10
# Attach to the running container and start Tomcat
docker exec webapp bash -c 'cd /usr/local/tomcat/bin && ./startup.sh'
```
-----------------------------------------------------------------------------

